# Default values for lp-masterdataapi backend microservice

nodeSelector:
  kubernetes.io/os: linux

serviceAccount:
  create: true
  name: "lp-masterdataapi"
  automountServiceAccountToken: false

service:
  enabled: true
  port: 443
  enableHttps: true

configmap:
  enabled: true
  configuration:
    LOGGING_LEVEL: 'Error'
    ASPNETCORE_TEMP: '/lpusr/lpapi/Logs'  
    TMPDIR: '/lpusr/lpapi/Logs'

deployment:
  containerPort: 8084
  configChecksum: true   
  securityContext:      
      runAsNonRoot: true
      fsGroup: 2000   
  restartPolicy: Always
  terminationGracePeriodSeconds: 30
  serviceAccountName: lp-masterdataapi
  serviceAccount: lp-masterdataapi
  imagePullPolicy: Always
  hostNetwork: false
  hostPID: false
  hostIPC: false
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 2
  progressDeadlineSeconds: 600
  containers:
    securityContext:
      runAsUser: 1000
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      runAsGroup: 3000
      capabilities:
        drop:
           - ALL 

ingress:
  enabled: true
  className: ""
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$2

    #Max body size
    nginx.ingress.kubernetes.io/proxy-body-size: 128m
    nginx.org/client-max-body-size: 50m

    #Timeout
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-next-upstream-timeout: "600"

    #SSLconfig
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true" 
    nginx.ingress.kubernetes.io/ssl-prefer-server-ciphers: "true"
    
    #Ratelimit
    nginx.ingress.kubernetes.io/limit-burst-multiplier: "10"
    nginx.ingress.kubernetes.io/limit-connections: "50"
    nginx.ingress.kubernetes.io/limit-rpm: "300"
    nginx.ingress.kubernetes.io/limit-rps: "45"

    #Perfannotaions
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "LPINGRESSCOOKIE"
    nginx.ingress.kubernetes.io/session-cookie-expires: "1800"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "1800"
    nginx.ingress.kubernetes.io/affinity-mode: "persistent"
    nginx.ingress.kubernetes.io/session-cookie-samesite: "Strict"
    nginx.ingress.kubernetes.io/session-cookie-conditional-samesite-none: "true"   

# resources:
#   requests:
#     memory: "500Mi"
#     cpu: "350m"
#   limits:
#     memory: "650Mi"
#     cpu: "500m"

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 65
  targetMemoryUtilizationPercentage: 75

probes:
  enabled: true
  livenessProbe:
    httpGet:
      path: /liveness
      port: 8084
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 5
  readinessProbe:
    httpGet:
      path: /readiness
      port: 8084
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 5
  terminationMessagePath: /dev/termination-log
  terminationMessagePolicy: File